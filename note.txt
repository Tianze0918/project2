1. Client_hello passed
2. Server_hello 
    A. Server side global hello message initialization changed to the entire serialized message from tlv->val
    B. Certificate size fixed from strlen(cwd)+16 to strlen(cwd)+17
    C. ntohs comment out fixed bad signature
3. Finished
    A. send transcript was called in output_sec instead of inpt_sec, thus transcript not sent out but got displayed.
    B. length of transcript needed to be returned by input_sec, missig before
    C. Verification uses public key of server from certificate, the public key in server hello message is randomly generated each time
    D. Peer public key is from certification for verifiation, then it needs to be loaded again as public key in server hello message
4. Client  
    A. Decrption had size of uint8_t, which truncated actual size of ciphertext (>256)

* Does server certificate public key equals to public key in server hello?


server_hello_message_len:
1. generate_keys    
2. send_finished
3. verify_transcript
4. input/output_sec



Server_hello correct Type:
Server_hello            0x20
1. Nonce                0x01        32
2. Certificate          0xA0        
    A. DNS-Name         0xA1
    B. Public_key       0x02
    C. Signature        0xA2
3. Public_key           0x02        91
4. Handshake_signature  0x21        72



Server:
1. Client_hello         Y               Output_sec server
2. Server_hello         Y               Input_sec server

Client:
1. Client_hello         Y
2. Server_hello         Y               Client_finished